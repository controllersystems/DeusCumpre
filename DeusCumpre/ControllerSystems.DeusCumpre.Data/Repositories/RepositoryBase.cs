//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using AutoMapper;
using ControllerSystems.DeusCumpre.Application.Interfaces.Repositories;
using ControllerSystems.DeusCumpre.Data.Context;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;

namespace ControllerSystems.DeusCumpre.Data.Repositories
{
    public class RepositoryBase<TEntityDto, TEntity> : IRepositoryBase<TEntityDto>
        where TEntityDto : class
        where TEntity : class
    {
        public TEntity Convert(TEntityDto tEntityDto)
        {
            return Mapper.Map<TEntityDto, TEntity>(tEntityDto);
        }

        public List<TEntity> Convert(List<TEntityDto> listTEntityDto)
        {
            return Mapper.Map<List<TEntityDto>, List<TEntity>>(listTEntityDto);
        }

        public TEntityDto Convert(TEntity tEntity)
        {
            return Mapper.Map<TEntity, TEntityDto>(tEntity);
        }

        public List<TEntityDto> Convert(List<TEntity> listTEntity)
        {
            return Mapper.Map<List<TEntity>, List<TEntityDto>>(listTEntity);
        }

        public virtual void Add(TEntityDto tEntityDto)
        {
            using (DeusCumpreContext db = new DeusCumpreContext())
            {
                db.Set<TEntity>().Add(Convert(tEntityDto));
                db.SaveChanges();
            }
        }

        public void Delete(TEntityDto tEntityDto)
        {
            using (DeusCumpreContext db = new DeusCumpreContext())
            {
                db.Set<TEntity>().Remove(Convert(tEntityDto));
                db.SaveChanges();
            }
        }

        public virtual void Update(TEntityDto tEntityDto)
        {
            using (DeusCumpreContext db = new DeusCumpreContext())
            {
                db.Entry(Convert(tEntityDto)).State = EntityState.Modified;
                db.SaveChanges();
            }
        }


        public virtual List<TEntityDto> GetAll()
        {
            using (DeusCumpreContext db = new DeusCumpreContext())
            {
                return Convert(db.Set<TEntity>().ToList());
            }
        }


        public TEntityDto GetById(int id)
        {
            using (DeusCumpreContext db = new DeusCumpreContext())
            {
                return Convert(db.Set<TEntity>().Find(id));
            }
        }
    }
}